syntax = "proto3";
package kompics.benchmarks;

import "messages.proto";

service BenchmarkRunner {
	rpc Ready (ReadyRequest) returns (ReadyResponse);
	rpc Shutdown (ShutdownRequest) returns (ShutdownAck);
	rpc Fibonacci (FibonacciRequest) returns (TestResult);

	rpc PingPong (PingPongRequest) returns (TestResult);
	rpc NetPingPong (PingPongRequest) returns (TestResult);
	rpc ThroughputPingPong (ThroughputPingPongRequest) returns (TestResult);
	rpc NetThroughputPingPong (ThroughputPingPongRequest) returns (TestResult);
	rpc AtomicRegister (AtomicRegisterRequest) returns (TestResult);
	rpc SizedThroughput (SizedThroughputRequest) returns (TestResult);
}

message PingPongRequest {
	uint64 number_of_messages = 1;
}
message ThroughputPingPongRequest {
	uint64 messages_per_pair = 1;
	uint64 pipeline_size = 2;
	uint32 parallelism = 3;
	bool static_only = 4;
}
message AtomicRegisterRequest {
	float read_workload = 1;
	float write_workload = 2;
	uint32 partition_size = 3;
	uint64 number_of_keys = 4;
}
message SizedThroughputRequest {
	uint32 message_size = 1;
	uint32 batch_size = 2;
	uint32 number_of_batches = 3;
	uint32 number_of_pairs = 4;
}
message FibonacciRequest {
	uint32 fib_number = 1;
}
